@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    //Products
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Products" asp-action="ProductOverview">Artikelübersicht</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Products" asp-action="ProductDetails">Artikel</a>
    </li>

    //Orders
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Orders" asp-action="OrderOverview">Bestellübersicht</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Orders" asp-action="OrderDetails">Bestellung</a>
    </li>

    //User
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    //<li class="nav-item">
    //  <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    //</li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
